{
  "name": "Angular-tts",
  "tagline": "An AngularJS service to speak the text via the OpenFPT TTS (text-to-speech) API.",
  "body": "# openfpt-ng-tts\r\n\r\nAn AngularJS service to speak the text via the OpenFPT TTS (text-to-speech) API. \r\n\r\n## Installation\r\n\r\n### Install through bower:\r\n\r\n```bash\r\n# from the terminal at the root of your project\r\nbower install openfpt-ng-tts --save\r\n```\r\n\r\nOr you can install by this repo (not recommended)\r\n\r\n```bash\r\n# from the terminal at the root of your project\r\nbower install fpt-corp/angular-tts --save\r\n```\r\n    \r\n\r\n### Add to your module deps\r\n```javascript\r\nangular.module('xxx', ['fpt.angular-tts']);\r\n```\r\n\r\n## Use\r\n\r\n### Get the API Key\r\n\r\nGo to [Open FPT API Developer Portal](http://dev.openfpt.vn/) to get your API Key\r\n\r\n### Create a HTML Audio players on HTML file\r\n```html\r\n    <audio id=\"openfpt-tts\"> </audio>\r\n``` \r\n\r\n### Inject the service\r\n\r\nAdd openfptTts as injection to use in angular controller\r\n\r\n```javascript\r\nangular.module('myApp').controller('HomeCtrl', ['$scope', 'openfptTts', function ($scope, openfptTts) {\r\n    // Your code goes here   \r\n}];\r\n```\r\n\r\n### Global config\r\n\r\n```javascript\r\nopenfptTts.apiKey = 'YOUR_API_GOES_HERE';\r\nopenfptTts.elementId = 'openfpt-tts'; //default is 'openfpt-tts'\r\nopenfptTts.voice = 'both'; //default is 'both'\r\nopenfptTts.speed = 0; //default is 0\r\n```\r\n\r\n- `voice` option can be `male | female | both`. When voice is set to `both`, the engine will speak with **male** voice and **female** voice sequentially.\r\n- `speed` option can be:\r\n   - `-3` : extreme slow\r\n   - `-2` : very slow \r\n   - `-1` : slow \r\n   - ` 0` : normal (default) \r\n   - ` 1` : fast  \r\n   - ` 2` : very fast \r\n   - ` 3` : extreme fast \r\n\r\n### Method\r\n\r\n#### `openfptTts.speak(text, options, cb)`: Speak a singleline of text.\r\n- text `string`: Text you want to speak.\r\n- cb `nodejs callback` cb(err)\r\n\r\n#### `openfptTts.speakArray(textArray, options, cb)`: Speak sequentially.\r\n- textArray `array[string]`: Text you want to speak.\r\n- cb `nodejs callback` cb(err)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}